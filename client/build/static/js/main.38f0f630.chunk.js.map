{"version":3,"sources":["components/DeleteBtn/DeleteBtn.js","components/Jumbotron/Jumbotron.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","components/Form/Input.js","components/Form/FormBtn.js","pages/Books/Books.js","pages/Detail/Detail.js","pages/NoMatch/NoMatch.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["DeleteBtn","props","react_default","a","createElement","Object","assign","className","Jumbotron","_ref","children","style","height","clear","API","getBooks","axios","get","getBook","id","deleteBook","delete","saveBook","bookData","post","Col","size","split","map","join","Container","fluid","concat","Row","List","ListItem","Input","FormBtn","float","marginBottom","Books","state","books","title","author","loadBooks","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","this","_this2","Container_Container","Row_Row","Col_Col","components_Jumbotron_Jumbotron","Input_Input","onChange","placeholder","FormBtn_FormBtn","disabled","onClick","length","List_List_List","book","ListItem_ListItem","key","_id","Link","to","components_DeleteBtn_DeleteBtn","Component","Detail","match","params","NoMatch","role","aria-label","Nav","href","App","BrowserRouter","components_Nav_Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38f0f630.chunk.js","sourcesContent":["import React from 'react';\nimport './DeleteBtn.css';\n\nconst DeleteBtn = props => (\n\t<span className=\"delete-btn\" {...props}>\n\t\t✗\n\t</span>\n);\n\nexport default DeleteBtn;\n","import React from \"react\";\n\nconst Jumbotron = ({ children }) => (\n  <div style={{ height: 300, clear: \"both\" }} className=\"jumbotron\">\n    {children}\n  </div>\n);\n\nexport default Jumbotron;\n","import axios from 'axios';\n\nexport default {\n\t// Gets all books\n\tgetBooks: function() {\n\t\treturn axios.get('/api/books');\n\t},\n\t// Gets the book with the given id\n\tgetBook: function(id) {\n\t\treturn axios.get('/api/books/' + id);\n\t},\n\t// Deletes the book with the given id\n\tdeleteBook: function(id) {\n\t\treturn axios.delete('/api/books/' + id);\n\t},\n\t// Saves a book to the database\n\tsaveBook: function(bookData) {\n\t\treturn axios.post('/api/books', bookData);\n\t}\n};\n","import React from \"react\";\n\nexport const Col = ({ size, children }) => (\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\n    {children}\n  </div>\n);\n","import React from \"react\";\n\nexport const Container = ({ fluid, children }) => (\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\n    {children}\n  </div>\n);\n","import React from \"react\";\n\nexport const Row = ({ fluid, children }) => (\n  <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport \"./List.css\";\n\nexport const List = ({ children }) => {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">\n        {children}\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ListItem = props => (\n  <li className=\"list-group-item\">\n    {props.children}\n  </li>\n);\n","import React from \"react\";\n\nexport const Input = props => (\n  <div className=\"form-group\">\n    <input className=\"form-control\" {...props} />\n  </div>\n);\n","import React from \"react\";\n\nexport const FormBtn = props => (\n  <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n    {props.children}\n  </button>\n);\n","import React, { Component } from 'react';\nimport DeleteBtn from '../../components/DeleteBtn';\nimport Jumbotron from '../../components/Jumbotron';\nimport API from '../../utils/API';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from '../../components/Grid';\nimport { List, ListItem } from '../../components/List';\nimport { Input, FormBtn } from '../../components/Form';\n\nclass Books extends Component {\n\tstate = {\n\t\tbooks: [],\n\t\ttitle: '',\n\t\tauthor: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadBooks();\n\t}\n\n\tloadBooks = () => {\n\t\tAPI.getBooks()\n\t\t\t.then(res => this.setState({ books: res.data, title: '', author: '' }))\n\t\t\t.catch(err => console.log(err));\n\t};\n\n\tdeleteBook = id => {\n\t\tAPI.deleteBook(id)\n\t\t\t.then(res => this.loadBooks())\n\t\t\t.catch(err => console.log(err));\n\t};\n\n\thandleInputChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\thandleFormSubmit = event => {\n\t\tevent.preventDefault();\n\t\tif (this.state.title && this.state.author) {\n\t\t\tAPI.saveBook({\n\t\t\t\ttitle: this.state.title,\n\t\t\t\tauthor: this.state.author\n\t\t\t})\n\t\t\t\t.then(res => this.loadBooks())\n\t\t\t\t.catch(err => console.log(err));\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col size=\"md-6\">\n\t\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t\t<h1>What Books Should I Read?</h1>\n\t\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\tplaceholder=\"Title (required)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.author}\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\tname=\"author\"\n\t\t\t\t\t\t\t\tplaceholder=\"Author (required)\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<FormBtn\n\t\t\t\t\t\t\t\tdisabled={!(this.state.author && this.state.title)}\n\t\t\t\t\t\t\t\tonClick={this.handleFormSubmit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit Book\n\t\t\t\t\t\t\t</FormBtn>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\n\t\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t\t<h1>Books On My List</h1>\n\t\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t\t{this.state.books.length ? (\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{this.state.books.map(book => (\n\t\t\t\t\t\t\t\t\t<ListItem key={book._id}>\n\t\t\t\t\t\t\t\t\t\t<Link to={'/books/' + book._id}>\n\t\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t\t{book.title} by {book.author}\n\t\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t<DeleteBtn onClick={() => this.deleteBook(book._id)} />\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h3>No Results to Display</h3>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default Books;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from '../../components/Grid';\nimport Jumbotron from '../../components/Jumbotron';\nimport API from '../../utils/API';\n\nclass Detail extends Component {\n\tstate = {\n\t\tbook: {}\n\t};\n\n\tcomponentDidMount() {\n\t\tAPI.getBook(this.props.match.params.id)\n\t\t\t.then(res => this.setState({ book: res.data }))\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col size=\"md-12\">\n\t\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{this.state.book.title} by {this.state.book.author}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col size=\"md-2\">\n\t\t\t\t\t\t<Link to=\"/\">← Back to Authors</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nconst NoMatch = () => (\n  <Container fluid>\n    <Row>\n      <Col size=\"md-12\">\n        <Jumbotron>\n          <h1>404 Page Not Found</h1>\n          <h1>\n            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n              🙄\n            </span>\n          </h1>\n        </Jumbotron>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NoMatch;\n","import React from 'react';\n\nconst Nav = () => (\n\t<nav className=\"navbar navbar-inverse navbar-top\">\n\t\t<div className=\"container-fluid\">\n\t\t\t<div className=\"navbar-header\">\n\t\t\t\t<a href=\"/\" className=\"navbar-brand\">\n\t\t\t\t\tReact Reading List\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</nav>\n);\n\nexport default Nav;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Books from './pages/Books';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Nav from './components/Nav';\n\nconst App = () => (\n\t<Router>\n\t\t<div>\n\t\t\t<Nav />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Books} />\n\t\t\t\t<Route exact path=\"/books\" component={Books} />\n\t\t\t\t<Route exact path=\"/books/:id\" component={Detail} />\n\t\t\t\t<Route component={NoMatch} />\n\t\t\t</Switch>\n\t\t</div>\n\t</Router>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}